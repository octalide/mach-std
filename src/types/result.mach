use std.types.bool;

pub str Result<T, E> {
    tag:  u32;
    data: uni {
        ok_value:  T;
        err_value: E;
    };
}

pub val TAG_OK:  u32 = 0;
pub val TAG_ERR: u32 = 1;

pub fun Result<T, E>.is_ok(this: Result<T, E>) bool {
    ret this.tag == TAG_OK;
}

pub fun Result<T, E>.is_err(this: Result<T, E>) bool {
    ret this.tag == TAG_ERR;
}

pub fun Result<T, E>.unwrap_ok(this: Result<T, E>) T {
    ret this.data.ok_value;
}

pub fun Result<T, E>.unwrap_err(this: Result<T, E>) E {
    ret this.data.err_value;
}

pub fun ok<T, E>(value: T) Result<T, E> {
    var res: Result<T, E>;
    res.tag           = TAG_OK;
    res.data.ok_value = value;
    ret res;
}

pub fun err<T, E>(value: E) Result<T, E> {
    var res: Result<T, E>;
    res.tag            = TAG_ERR;
    res.data.err_value = value;
    ret res;
}
