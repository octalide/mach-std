# ascii helpers
pub fun is_space(b: u8) u8 {
    ret (b == 9 || b == 10 || b == 11 || b == 12 || b == 13 || b == 32);
}

pub fun is_digit(b: u8) u8 {
    ret (b >= '0' && b <= '9');
}

pub fun is_alpha(b: u8) u8 {
    ret ((b >= 'a' && b <= 'z') || (b >= 'A' && b <= 'Z'));
}

pub fun is_alnum(b: u8) u8 {
    ret (is_alpha(b) || is_digit(b));
}

pub fun to_lower(b: u8) u8 {
    if (b >= 'A' && b <= 'Z') {
        ret b + 32;
    }

    ret b;
}

pub fun to_upper(b: u8) u8 {
    if (b >= 'a' && b <= 'z') {
        ret b - 32;
    }

    ret b;
}


pub fun digit_val(b: u8) i32 {
    if (b >= '0' && b <= '9') {
        ret (b - '0')::i32;
    }

    val lo: u8 = to_lower(b);
    if (lo >= 'a' && lo <= 'z') {
        ret ((lo - 'a')::i32) + 10;
    }
    
    ret -1;
}
